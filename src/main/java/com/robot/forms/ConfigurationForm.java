package main.resources.java.com.robot.core.forms;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import main.resources.java.com.robot.core.services.AnmPropertiesService;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

import static javax.swing.JOptionPane.showMessageDialog;
@Component
public class ConfigurationForm {
    private JTextField url;
    private JTextField password;
    private JTextField pinSlctId;
    private JTextField cambiarUsuario;
    private JTextField username;
    private JTextField webdriver;
    private JLabel Webdriver;
    private Properties props;
    @Autowired
    private AnmPropertiesService anmPropertiesService;

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public ConfigurationForm(Properties props) {

        this.props = props;
        createUIComponents(props);
        guardarButton.addActionListener(e -> saveData());
    }

    private void saveData() {
        try {
            FileOutputStream out = new FileOutputStream("anm.properties");
            props.setProperty("webdriver", webdriver.getText());
            props.setProperty("url", url.getText());
            props.setProperty("cambiarUsuario", cambiarUsuario.getText());
            props.setProperty("username", username.getText());
            props.setProperty("password", password.getText());
            props.setProperty("pinSlctId", pinSlctId.getText());
            props.store(out, null);
            out.close();
            showMessageDialog(null, "Datos guardados correctamente");
        } catch (IOException e) {
            e.printStackTrace();
            showMessageDialog(null, "Error guardando los datos");
        }
    }

    private void createUIComponents(Properties props) {

        guardarButton.setIcon(new ImageIcon("Resources/Actions-document-save-icon.png"));

        //setting properties
        webdriver.setText(props.getProperty("webdriver"));
        cambiarUsuario.setText(props.getProperty("cambiarUsuario"));
        url.setText(props.getProperty("url"));
        username.setText(props.getProperty("username"));
        password.setText(props.getProperty("password"));
        pinSlctId.setText(props.getProperty("pinSlctId"));
    }

    private JPanel rootPanel;
    private JButton guardarButton;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(3, 1, new Insets(5, 5, 0, 0), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(6, 3, new Insets(5, 5, 5, 5), -1, -1));
        rootPanel.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(500, -1), null, null, 0, false));
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label1 = new JLabel();
        label1.setText("URL");
        panel1.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Usuario");
        panel1.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        url = new JTextField();
        panel1.add(url, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 20), new Dimension(381, 30), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Contraseña");
        panel1.add(label3, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        password = new JTextField();
        password.setMinimumSize(new Dimension(100, 30));
        password.setText("");
        panel1.add(password, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 20), new Dimension(381, 30), new Dimension(200, -1), 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Pin");
        panel1.add(label4, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pinSlctId = new JTextField();
        panel1.add(pinSlctId, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 20), new Dimension(381, 30), new Dimension(200, -1), 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("Cambiar Usuario");
        panel1.add(label5, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cambiarUsuario = new JTextField();
        panel1.add(cambiarUsuario, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 20), new Dimension(381, 30), new Dimension(200, -1), 0, false));
        username = new JTextField();
        username.setMinimumSize(new Dimension(100, 30));
        panel1.add(username, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 20), new Dimension(381, 30), new Dimension(200, -1), 0, false));
        Webdriver = new JLabel();
        Webdriver.setText("WebDrive");
        panel1.add(Webdriver, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        webdriver = new JTextField();
        panel1.add(webdriver, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(500, 30), null, 0, false));
        guardarButton = new JButton();
        guardarButton.setText("Guardar");
        panel1.add(guardarButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setText("Configuración General");
        rootPanel.add(label6, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
